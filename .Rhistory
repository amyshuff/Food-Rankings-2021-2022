SchoolBreakfastProgram, NationalSchoolLunchProgram, AfterschoolCareProgram,
SevereNeedBreakfast, UniversalFreeBreakfast, AreaEligibleSnack, CEP, Provision2)
snp.meal.reimb <- read_xlsx(here("WF Attachment 180587 PIR 23-194_PY22 SNP Meal Detail_01312023.xlsx"), sheet = 3) %>%
#  filter(TypeOfOrg == "Public") %>%
mutate(CEID = as.numeric(CEID),
SiteID = as.numeric(SiteID),
ESC.Region = as.numeric(ESC),
ClaimDate = as.character(ClaimDate),
#tda notes say that they consider october the typical snapshot for the year
#this is what they did last year
# EnrollmentQty = ifelse(ClaimDate == "2021-10-01", EnrollmentQty, 0),
# FreeEligQty = ifelse(ClaimDate == "2021-10-01", FreeEligQty, 0),
# RedcEligQty = ifelse(ClaimDate == "2021-10-01", RedcEligQty, 0),
# PaidEligQty = ifelse(ClaimDate == "2021-10-01", PaidEligQty, 0)
#only 455 sites submitted claims for October, though
) %>%
group_by(CEID, SiteID) %>%
summarise(
CEName = first(CEName),
County = first(CECounty),
District = first(CountyDistrictCode),
ESC.Region = first(ESC.Region),
# this sum would find the october number, if we were using that method
# Enrollment_TDA = sum(EnrollmentQty, na.rm = T),
# Eligible.Free = sum(FreeEligQty, na.rm = T),
# Eligible.Reduced = sum(RedcEligQty, na.rm = T),
# #sums here represent site total for year
SBP.Days.Served = sum(BreakfastDays, na.rm = T),
NSLP.Days.Served = sum(LunchDays, na.rm = T),
NSLP.Snack.Days.Served = sum(SnackDays, na.rm=T),
# SBP.Free = sum(BreakfastServedFree, na.rm=T),
# SBP.Reduced = sum(BreakfastServedRedc, na.rm=T),
# NSLP.Free = sum(LunchServedFree, na.rm=T),
# NSLP.Reduced = sum(LunchServedRedc, na.rm=T),
#Because for this particular year everyone could get free meals, I'm assuming those eligible for paid meals still didn't pay.
#so I'm going to look at all meals, regardless of eligibility
NSLP.Total = sum(LunchTotal),
SBP.Total = sum(BreakfastTotal)
)
snp <- full_join(snp.contacts, snp.meal.reimb, by = c("CEID", "SiteID", "CEName", "District", "ESC.Region"))
waiver data was captured.(This waiver has ended, so disregard this part next year.)
View(sso)
sso <- read.csv("2021-2022_School_Meal_Count_-_TDA_F_N_Dashboard.csv") %>%
filter(ProgramYear == "2021-2022",
#         TypeOfOrg == "Public",
Program == "SEAMLESS_SUMMER_OPTION_MEALS") %>%
group_by(CEID, SiteID) %>%
summarise(
CEName = first(CEName),
County = first(CECounty),
District = first(CountyDistrictCode),
ESC.Region = first(ESC),
#sums here represent site total for year
SSO.Breakfast = sum(BreakfastTotal, na.rm = T),
SSO.Lunch = sum(LunchTotal, na.rm = T),
SSO.Breakfast.Days = sum(BreakfastDays, na.rm = T),
SSO.Lunch.Days = sum(LunchDays, na.rm = T),
SSO.Snack.Days = sum(AMSnackDays + PMSnackDays, na.rm=T),
)
cacfp <- read.csv(here("Child_and_Adult_Care_Food_Programs__CACFP____At_Risk__Meal_Reimbursement___Program_Year_2021-2022.csv")) %>%
#I'm assuming this should be filtered to Educational institutions
#  filter(TypeOfAgency == "Educational Institution") %>%
mutate(CEID = as.numeric(CEID),
SiteID = as.numeric(SiteID),
ESC.Region = as.numeric(ESC)) %>%
group_by(CEID, SiteID) %>%
summarise(CEName = first(CEName),
County = first(CECounty),
District = first(CountyDistrictCode),
ESC.Region = first(ESC.Region),
CACFP.at.Risk.Supper.Days.Served = sum(SupperDays, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(SnackDays, na.rm=T))
district <- full_join(snp, cacfp, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County")) %>%
full_join(sso, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County"))
district$District = gsub("-", "", district$District)
district <- district %>%
mutate(District = as.numeric(District)) %>%
mutate(
CEP01 = ifelse(CEP=="Y", 1, 0),
District.Number = ifelse(District %in% harmony, 227816,
ifelse(District %in% kipp_data, 227820, District))
) %>%
group_by(District.Number) %>%
summarise(
CEName = first(CEName),
County = first(na.omit(County)),
ESC.Region = first(ESC.Region),
#Eligible.Free = sum(Eligible.Free, na.rm = T),
#Enrollment_TDA = sum(Enrollment_TDA, na.rm = T),
#Eligible.Reduced = sum(Eligible.Reduced, na.rm = T),
NSLP.Days.Served = max(NSLP.Days.Served, 0, na.rm = T),
#NSLP.Free = sum(NSLP.Free, na.rm=T),
#NSLP.Reduced = sum(NSLP.Reduced, na.rm=T),
SBP.Days.Served = max(SBP.Days.Served, 0, na.rm = T),
#SBP.Free = sum(SBP.Free, na.rm=T),
#SBP.Reduced = sum(SBP.Reduced, na.rm=T),
CACFP.at.Risk.Supper.Days.Served = sum(CACFP.at.Risk.Supper.Days.Served, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(CACFP.at.Risk.Snack.Days.Served, na.rm=T),
NSLP.Snack.Days.Served = sum(NSLP.Snack.Days.Served, na.rm=T),
CEP = sum(CEP01, na.rm=T),
SBP.Total = sum(SBP.Total, na.rm=T),
NSLP.Total = sum(NSLP.Total, na.rm=T),
#Next year we don't need SSO numbers
SSO.Breakfast = sum(SSO.Breakfast, na.rm = T),
SSO.Lunch = sum(SSO.Lunch, na.rm = T),
SSO.Breakfast.Days = max(SSO.Breakfast.Days, 0, na.rm = T),
SSO.Lunch.Days = max(SSO.Lunch.Days, 0, na.rm = T),
SSO.Snack.Days = max(SSO.Snack.Days, 0, na.rm = T)
)
district <- full_join(snp, cacfp, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County")) %>%
full_join(sso, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County"))
district$District = gsub("-", "", district$District)
district <- district %>%
mutate(District = as.numeric(District)) %>%
mutate(
CEP01 = ifelse(CEP=="Y", 1, 0),
District.Number = ifelse(District %in% harmony, 227816,
ifelse(District %in% kipp_data, 227820, District))
) %>%
group_by(District.Number) %>%
summarise(
CEName = first(CEName),
County = first(na.omit(County)),
ESC.Region = first(ESC.Region),
#Eligible.Free = sum(Eligible.Free, na.rm = T),
#Enrollment_TDA = sum(Enrollment_TDA, na.rm = T),
#Eligible.Reduced = sum(Eligible.Reduced, na.rm = T),
NSLP.Days.Served = max(NSLP.Days.Served, 0, na.rm = T),
#NSLP.Free = sum(NSLP.Free, na.rm=T),
#NSLP.Reduced = sum(NSLP.Reduced, na.rm=T),
SBP.Days.Served = max(SBP.Days.Served, 0, na.rm = T),
#SBP.Free = sum(SBP.Free, na.rm=T),
#SBP.Reduced = sum(SBP.Reduced, na.rm=T),
CACFP.at.Risk.Supper.Days.Served = sum(CACFP.at.Risk.Supper.Days.Served, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(CACFP.at.Risk.Snack.Days.Served, na.rm=T),
NSLP.Snack.Days.Served = sum(NSLP.Snack.Days.Served, na.rm=T),
CEP = sum(CEP01, na.rm=T),
SBP.Total = sum(SBP.Total, na.rm=T),
NSLP.Total = sum(NSLP.Total, na.rm=T),
#Next year we don't need SSO numbers
SSO.Breakfast = sum(SSO.Breakfast, na.rm = T),
SSO.Lunch = sum(SSO.Lunch, na.rm = T),
SSO.Breakfast.Days = max(SSO.Breakfast.Days, 0, na.rm = T),
SSO.Lunch.Days = max(SSO.Lunch.Days, 0, na.rm = T),
SSO.Snack.Days = max(SSO.Snack.Days, 0, na.rm = T)
) %>%
replace(is.na(.), 0)
district <- full_join(snp, cacfp, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County")) %>%
full_join(sso, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County"))
district$District = gsub("-", "", district$District)
district <- district %>%
mutate(District = as.numeric(District)) %>%
mutate(
CEP01 = ifelse(CEP=="Y", 1, 0),
District.Number = ifelse(District %in% harmony, 227816,
ifelse(District %in% kipp_data, 227820, District))
) %>%
group_by(District.Number) %>%
summarise(
CEName = first(CEName),
County = first(na.omit(County)),
ESC.Region = first(ESC.Region),
#Eligible.Free = sum(Eligible.Free, na.rm = T),
#Enrollment_TDA = sum(Enrollment_TDA, na.rm = T),
#Eligible.Reduced = sum(Eligible.Reduced, na.rm = T),
NSLP.Days.Served = max(NSLP.Days.Served, 0, na.rm = T),
#NSLP.Free = sum(NSLP.Free, na.rm=T),
#NSLP.Reduced = sum(NSLP.Reduced, na.rm=T),
SBP.Days.Served = max(SBP.Days.Served, 0, na.rm = T),
#SBP.Free = sum(SBP.Free, na.rm=T),
#SBP.Reduced = sum(SBP.Reduced, na.rm=T),
CACFP.at.Risk.Supper.Days.Served = sum(CACFP.at.Risk.Supper.Days.Served, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(CACFP.at.Risk.Snack.Days.Served, na.rm=T),
NSLP.Snack.Days.Served = sum(NSLP.Snack.Days.Served, na.rm=T),
CEP = sum(CEP01, na.rm=T),
SBP.Total = sum(SBP.Total, na.rm=T),
NSLP.Total = sum(NSLP.Total, na.rm=T),
#Next year we don't need SSO numbers
SSO.Breakfast = sum(SSO.Breakfast, na.rm = T),
SSO.Lunch = sum(SSO.Lunch, na.rm = T),
SSO.Breakfast.Days = max(SSO.Breakfast.Days, 0, na.rm = T),
SSO.Lunch.Days = max(SSO.Lunch.Days, 0, na.rm = T),
SSO.Snack.Days = max(SSO.Snack.Days, 0, na.rm = T)
)
View(district)
district <- full_join(snp, cacfp, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County")) %>%
full_join(sso, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County"))
district$District = gsub("-", "", district$District)
district <- district %>%
mutate(District = as.numeric(District)) %>%
mutate(
CEP01 = ifelse(CEP=="Y", 1, 0),
District.Number = ifelse(District %in% harmony, 227816,
ifelse(District %in% kipp_data, 227820, District))
) %>%
group_by(District.Number) %>%
summarise(
CEName = first(CEName),
County = first(na.omit(County)),
ESC.Region = first(ESC.Region),
#Eligible.Free = sum(Eligible.Free, na.rm = T),
#Enrollment_TDA = sum(Enrollment_TDA, na.rm = T),
#Eligible.Reduced = sum(Eligible.Reduced, na.rm = T),
NSLP.Days.Served = max(NSLP.Days.Served, 0, na.rm = T),
#NSLP.Free = sum(NSLP.Free, na.rm=T),
#NSLP.Reduced = sum(NSLP.Reduced, na.rm=T),
SBP.Days.Served = max(SBP.Days.Served, 0, na.rm = T),
#SBP.Free = sum(SBP.Free, na.rm=T),
#SBP.Reduced = sum(SBP.Reduced, na.rm=T),
CACFP.at.Risk.Supper.Days.Served = sum(CACFP.at.Risk.Supper.Days.Served, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(CACFP.at.Risk.Snack.Days.Served, na.rm=T),
NSLP.Snack.Days.Served = sum(NSLP.Snack.Days.Served, na.rm=T),
CEP = sum(CEP01, na.rm=T),
SBP.Total = sum(SBP.Total, na.rm=T),
NSLP.Total = sum(NSLP.Total, na.rm=T),
#Next year we don't need SSO numbers
SSO.Breakfast = sum(SSO.Breakfast, na.rm = T),
SSO.Lunch = sum(SSO.Lunch, na.rm = T),
SSO.Breakfast.Days = max(SSO.Breakfast.Days, 0, na.rm = T),
SSO.Lunch.Days = max(SSO.Lunch.Days, 0, na.rm = T),
SSO.Snack.Days = max(SSO.Snack.Days, 0, na.rm = T)
) %>%
#  replace(is.na(.), 0) %>%
left_join(., tea, by="District.Number") %>%
mutate(
CEName = ifelse(District.Number==227820, "KIPP SCHOOLS", CEName),
#Eligible.Free and Eligible.Reduced are from the month with the greatest claims from schools
#next year use october numbers
#tda.frl.total = Eligible.Free + Eligible.Reduced,
# NSLP.Days.Served = ifelse(is.na(NSLP.Days.Served), 0, NSLP.Days.Served),
# SBP.Days.Served = ifelse(is.na(SBP.Days.Served), 0, SBP.Days.Served),
#don't need SSO next year, and instead of total, use free and reduced instead
Breakfast.Served = SSO.Breakfast + SBP.Total,
Breakfast.Days = SSO.Breakfast.Days + SBP.Days.Served,
Lunch.Served = SSO.Lunch + NSLP.Total,
Lunch.Days = SSO.Lunch.Days + NSLP.Days.Served,
Snack = SSO.Snack.Days + NSLP.Snack.Days.Served + CACFP.at.Risk.Snack.Days.Served,
#ADP is Average Daily Participation: The average number of students that ate on days meals were offered.
Breakfast.ADP = ifelse(Breakfast.Days==0, 0, Breakfast.Served/Breakfast.Days),
Lunch.ADP = ifelse(Lunch.Days==0, 0, (Lunch.Served/Lunch.Days)),
#Participation Rates are the percent of students that ate
Pct.Breakfast.Participation = (Breakfast.ADP/tea.all.stud)*100,
Pct.Lunch.Participation = (Lunch.ADP/tea.all.stud)*100,
cacfp_supper01 = ifelse(CACFP.at.Risk.Supper.Days.Served>0, 100, 0),
snack_anyafter =  ifelse(Snack>0, 100, 0)
)
View(district)
district_rankings <- district %>%
#remove small districts (less than 10,000 students) and those that aren't at least 60% economically disadvantaged
filter(tea.all.stud>=10000 & eco.dis.pct >= 60) %>%
#This is where we find our overall score for food rankings
mutate(district_sum = ((Pct.Lunch.Participation*0.25)+(Pct.Breakfast.Participation*0.5)+(cacfp_supper01*0.1)+(snack_anyafter*0.15))) %>%
arrange(-district_sum) %>%
mutate(Rank = row_number()) %>%
#select(CEName, Rank, County, ESC.Region, tea.all.stud, eco.dis.pct, district_sum, Pct.Lunch.Participation,
#       Pct.Breakfast.Participation, cacfp_supper01, snack_anyafter, CEP) %>%
mutate(cacfp_supper01 = ifelse(cacfp_supper01==100, "Yes", "No"),
snack_anyafter = ifelse(snack_anyafter==100, "Yes", "No"),
CEP = ifelse(CEP>0, "Yes", "No")) %>%
reshape::rename(c(CEName = "District Name",
ESC.Region = "ESC Region",
tea.all.stud = "Total Enrollment",
eco.dis.pct = "% Economically Disadvantaged",
district_sum = "Overall Score",
Pct.Lunch.Participation = "% Lunch Participation",
Pct.Breakfast.Participation = "% Breakfast Participation",
cacfp_supper01 = "CACFP Supper",
snack_anyafter = "Afterschool Snack"))
View(district_rankings)
district_rankings <- district %>%
#remove small districts (less than 10,000 students) and those that aren't at least 60% economically disadvantaged
filter(tea.all.stud>=10000 & eco.dis.pct >= 60) %>%
#This is where we find our overall score for food rankings
mutate(district_sum = ((Pct.Lunch.Participation*0.25)+(Pct.Breakfast.Participation*0.5)+(cacfp_supper01*0.1)+(snack_anyafter*0.15))) %>%
arrange(-district_sum) %>%
mutate(Rank = row_number()) %>%
select(CEName, Rank, County, ESC.Region, tea.all.stud, eco.dis.pct, district_sum, Pct.Lunch.Participation,
Pct.Breakfast.Participation, cacfp_supper01, snack_anyafter, CEP) %>%
mutate(cacfp_supper01 = ifelse(cacfp_supper01==100, "Yes", "No"),
snack_anyafter = ifelse(snack_anyafter==100, "Yes", "No"),
CEP = ifelse(CEP>0, "Yes", "No")) %>%
reshape::rename(c(CEName = "District Name",
ESC.Region = "ESC Region",
tea.all.stud = "Total Enrollment",
eco.dis.pct = "% Economically Disadvantaged",
district_sum = "Overall Score",
Pct.Lunch.Participation = "% Lunch Participation",
Pct.Breakfast.Participation = "% Breakfast Participation",
cacfp_supper01 = "CACFP Supper",
snack_anyafter = "Afterschool Snack"))
View(district_rankings)
View(district)
library(usethis)
library(tidyverse)
library(janitor)
library(reshape2)
library(stringr)
library(here)
library(readxl)
###### Harmony and Kipp Districts ######
harmony <- c(101858, 101862, 71806, 15828, 161807, 101846, 227816) #use to combine Harmony districts
kipp_data <- c(227820, 57837, 101813, 15826) #use to combine KIPP districts
###### TEA Enrollment Data ######
#This data is from the records request that we use for school rankings.
#Total Enrollment Counts in Student Program and Special Populations Reports, PEIMS Data 2021-2022
tea <- read_xlsx("pru_7128_StudPgmStateCampus22state.xlsx", skip = 6)
#Small enrollment numbers are masked with numbers like <10, so here we'll remove all the "<" characters.
#Enrollment for small campuses will be an over estimate.
tea$"ALL ENROLLMENT" =  gsub("<", "", tea$"ALL ENROLLMENT")
tea <- tea %>%
mutate(ENROLLMENT = as.numeric(tea$"ALL ENROLLMENT"),
#Economically disadvantaged numbers are masked with "-999"
eco.dis = ifelse(tea$"ECONOMICALLY DISADVANTAGED" >= 0, tea$"ECONOMICALLY DISADVANTAGED", NA)) %>%
rename(District.Number = "DISTRICT NUMBER") %>%
group_by(District.Number) %>%
summarise(tea.all.stud = sum(ENROLLMENT),
tea.eco.dis = sum(eco.dis, na.rm = T)) %>%
mutate(eco.dis.pct = (tea.eco.dis/tea.all.stud)*100)
###### TDA SNP Data ######
#Texas Department of Agriculture (TDA) School Nutrition Program (SNP) Data is from our public records request.
#It comes in an excel sheet with multiple tabs. We'll import each of the tabs, select the variables we want to keep, then join them together.
#This will probably look different next year. First check the Texas Open Data Portal for data before submitting records request.
#Notes from last year say that only the universal breakfast waiver information wasn't available without PIR
#https://data.texas.gov/stories/s/2021-2022-TDA-Food-and-Nutrition-Meals-Served-Dash/93tt-ffn6
snp.contacts <- read_xlsx(here("WF Attachment 180587 PIR 23-194_PY22 SNP Meal Detail_01312023.xlsx"), sheet = 2) %>%
#  filter(TypeOfOrg == "Public") %>%
mutate(CEID = as.numeric(CEID),
SiteID = as.numeric(SiteID),
ESC.Region = as.numeric(ESC)) %>%
group_by(CEID, SiteID) %>%
rename(County = CECounty,
District = CountyDistrictCode) %>%
select(CEID, SiteID, CEName, District, ESC.Region,
SchoolBreakfastProgram, NationalSchoolLunchProgram, AfterschoolCareProgram,
SevereNeedBreakfast, UniversalFreeBreakfast, AreaEligibleSnack, CEP, Provision2)
#this tab has claims each month for each site
#the work here represents what was done in excel last year
snp.meal.reimb <- read_xlsx(here("WF Attachment 180587 PIR 23-194_PY22 SNP Meal Detail_01312023.xlsx"), sheet = 3) %>%
#  filter(TypeOfOrg == "Public") %>%
mutate(CEID = as.numeric(CEID),
SiteID = as.numeric(SiteID),
ESC.Region = as.numeric(ESC),
ClaimDate = as.character(ClaimDate),
#tda notes say that they consider october the typical snapshot for the year
#this is what they did last year
# EnrollmentQty = ifelse(ClaimDate == "2021-10-01", EnrollmentQty, 0),
# FreeEligQty = ifelse(ClaimDate == "2021-10-01", FreeEligQty, 0),
# RedcEligQty = ifelse(ClaimDate == "2021-10-01", RedcEligQty, 0),
# PaidEligQty = ifelse(ClaimDate == "2021-10-01", PaidEligQty, 0)
#only 455 sites submitted claims for October, though
) %>%
group_by(CEID, SiteID) %>%
summarise(
CEName = first(CEName),
County = first(CECounty),
District = first(CountyDistrictCode),
ESC.Region = first(ESC.Region),
# this sum would find the october number, if we were using that method
# Enrollment_TDA = sum(EnrollmentQty, na.rm = T),
# Eligible.Free = sum(FreeEligQty, na.rm = T),
# Eligible.Reduced = sum(RedcEligQty, na.rm = T),
# #sums here represent site total for year
SBP.Days.Served = sum(BreakfastDays, na.rm = T),
NSLP.Days.Served = sum(LunchDays, na.rm = T),
NSLP.Snack.Days.Served = sum(SnackDays, na.rm=T),
# SBP.Free = sum(BreakfastServedFree, na.rm=T),
# SBP.Reduced = sum(BreakfastServedRedc, na.rm=T),
# NSLP.Free = sum(LunchServedFree, na.rm=T),
# NSLP.Reduced = sum(LunchServedRedc, na.rm=T),
#Because for this particular year everyone could get free meals, I'm assuming those eligible for paid meals still didn't pay.
#so I'm going to look at all meals, regardless of eligibility
NSLP.Total = sum(LunchTotal),
SBP.Total = sum(BreakfastTotal)
)
snp <- full_join(snp.contacts, snp.meal.reimb, by = c("CEID", "SiteID", "CEName", "District", "ESC.Region"))
#I don't think we use the cacfp contacts tab for anything
#cacfp.contacts <- read_xlsx(here("WF Attachment 180587 PIR 23-194_PY22 SNP Meal Detail_01312023.xlsx"), sheet = 4)
#Not sure if we need this. These schools didn't serve universal breakfast even though they received money for free lunches.
#District granted waiver from Senate Bill 376: Lists of CEs and sites approved to waive the Universal Breakfast requirement for PY22.
#Before importing this data to R, manually check and add CEID and Site ID if not already in sheet
#ub.waiver <- read_xlsx(here("WF Attachment 180587 PIR 23-194_PY22 SNP Meal Detail_01312023.xlsx"), sheet = 5) %>%
#  rename(SiteID = "SITE ID", CEName = "CENAME") %>%
#  mutate(CEID = as.numeric(CEID),
#         SiteID = as.numeric(SiteID),
#         UniversalBreakfastWaiver = "Y") %>%
#  select(CEID, SiteID, CEName, UniversalBreakfastWaiver)
#snp.full <- full_join(snp, ub.waiver, by = c("CEID", "SiteID", "CEName"))
###### SSO Data ######
#Seamless Summer Option (SSO) Data is from Texas Open Data Portal
#2021-2022 Monthly SNP & SSO School Meal Count:
#https://data.texas.gov/dataset/2021-2022-Monthly-School-Meal-Count/dyrd-amq2
#The Seamless Summer Option is what schools used to provide free lunches for all students, regardless of income, throughout the  year.
#This is where the USDA nutrition waiver data was captured.(This waiver has ended, so disregard this part next year.)
sso <- read.csv("2021-2022_School_Meal_Count_-_TDA_F_N_Dashboard.csv") %>%
filter(ProgramYear == "2021-2022",
#         TypeOfOrg == "Public",
Program == "SEAMLESS_SUMMER_OPTION_MEALS") %>%
group_by(CEID, SiteID) %>%
summarise(
CEName = first(CEName),
County = first(CECounty),
District = first(CountyDistrictCode),
ESC.Region = first(ESC),
#sums here represent site total for year
SSO.Breakfast = sum(BreakfastTotal, na.rm = T),
SSO.Lunch = sum(LunchTotal, na.rm = T),
SSO.Breakfast.Days = sum(BreakfastDays, na.rm = T),
SSO.Lunch.Days = sum(LunchDays, na.rm = T),
SSO.Snack.Days = sum(AMSnackDays + PMSnackDays, na.rm=T),
)
###### CACFP Data ######
#cacfp data is from Texas Open Data Portal
#Child and Adult Care Food Programs (CACFP) – At Risk– Meal Reimbursement – Program Year 2021-2022
#https://data.texas.gov/dataset/Child-and-Adult-Care-Food-Programs-CACFP-At-Risk-M/e4wr-4i5j
cacfp <- read.csv(here("Child_and_Adult_Care_Food_Programs__CACFP____At_Risk__Meal_Reimbursement___Program_Year_2021-2022.csv")) %>%
#  filter(TypeOfAgency == "Educational Institution") %>%
mutate(CEID = as.numeric(CEID),
SiteID = as.numeric(SiteID),
ESC.Region = as.numeric(ESC)) %>%
group_by(CEID, SiteID) %>%
summarise(CEName = first(CEName),
County = first(CECounty),
District = first(CountyDistrictCode),
ESC.Region = first(ESC.Region),
CACFP.at.Risk.Supper.Days.Served = sum(SupperDays, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(SnackDays, na.rm=T))
###### Aggregate school-level data up to district level ######
district <- full_join(snp, cacfp, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County")) %>%
full_join(sso, by=c("CEID", "SiteID", "CEName", "District", "ESC.Region", "County"))
district$District = gsub("-", "", district$District)
district <- district %>%
mutate(District = as.numeric(District)) %>%
mutate(
CEP01 = ifelse(CEP=="Y", 1, 0),
District.Number = ifelse(District %in% harmony, 227816,
ifelse(District %in% kipp_data, 227820, District))
) %>%
group_by(District.Number) %>%
summarise(
CEName = first(CEName),
County = first(na.omit(County)),
ESC.Region = first(ESC.Region),
#Eligible.Free = sum(Eligible.Free, na.rm = T),
#Enrollment_TDA = sum(Enrollment_TDA, na.rm = T),
#Eligible.Reduced = sum(Eligible.Reduced, na.rm = T),
NSLP.Days.Served = max(NSLP.Days.Served, 0, na.rm = T),
#NSLP.Free = sum(NSLP.Free, na.rm=T),
#NSLP.Reduced = sum(NSLP.Reduced, na.rm=T),
SBP.Days.Served = max(SBP.Days.Served, 0, na.rm = T),
#SBP.Free = sum(SBP.Free, na.rm=T),
#SBP.Reduced = sum(SBP.Reduced, na.rm=T),
CACFP.at.Risk.Supper.Days.Served = sum(CACFP.at.Risk.Supper.Days.Served, na.rm=T),
CACFP.at.Risk.Snack.Days.Served = sum(CACFP.at.Risk.Snack.Days.Served, na.rm=T),
NSLP.Snack.Days.Served = sum(NSLP.Snack.Days.Served, na.rm=T),
CEP = sum(CEP01, na.rm=T),
SBP.Total = sum(SBP.Total, na.rm=T),
NSLP.Total = sum(NSLP.Total, na.rm=T),
#Next year we don't need SSO numbers
SSO.Breakfast = sum(SSO.Breakfast, na.rm = T),
SSO.Lunch = sum(SSO.Lunch, na.rm = T),
SSO.Breakfast.Days = max(SSO.Breakfast.Days, 0, na.rm = T),
SSO.Lunch.Days = max(SSO.Lunch.Days, 0, na.rm = T),
SSO.Snack.Days = max(SSO.Snack.Days, 0, na.rm = T)
) %>%
#  replace(is.na(.), 0) %>%
left_join(., tea, by="District.Number") %>%
mutate(
CEName = ifelse(District.Number==227820, "KIPP SCHOOLS", CEName),
#Eligible.Free and Eligible.Reduced are from the month with the greatest claims from schools
#next year use october numbers
#tda.frl.total = Eligible.Free + Eligible.Reduced,
# NSLP.Days.Served = ifelse(is.na(NSLP.Days.Served), 0, NSLP.Days.Served),
# SBP.Days.Served = ifelse(is.na(SBP.Days.Served), 0, SBP.Days.Served),
#don't need SSO next year, and instead of total, use free and reduced instead
Breakfast.Served = SSO.Breakfast + SBP.Total,
Breakfast.Days = SSO.Breakfast.Days + SBP.Days.Served,
Lunch.Served = SSO.Lunch + NSLP.Total,
Lunch.Days = SSO.Lunch.Days + NSLP.Days.Served,
Snack = SSO.Snack.Days + NSLP.Snack.Days.Served + CACFP.at.Risk.Snack.Days.Served,
#ADP is Average Daily Participation: The average number of students that ate on days meals were offered.
Breakfast.ADP = ifelse(Breakfast.Days==0, 0, Breakfast.Served/Breakfast.Days),
Lunch.ADP = ifelse(Lunch.Days==0, 0, (Lunch.Served/Lunch.Days)),
#Participation Rates are the percent of students that ate
Pct.Breakfast.Participation = (Breakfast.ADP/tea.all.stud)*100,
Pct.Lunch.Participation = (Lunch.ADP/tea.all.stud)*100,
cacfp_supper01 = ifelse(CACFP.at.Risk.Supper.Days.Served>0, 100, 0),
snack_anyafter =  ifelse(Snack>0, 100, 0)
)
###### Rankings ######
district_rankings <- district %>%
#remove small districts (less than 10,000 students) and those that aren't at least 60% economically disadvantaged
filter(tea.all.stud>=10000 & eco.dis.pct >= 60) %>%
#This is where we find our overall score for food rankings
mutate(district_sum = ((Pct.Lunch.Participation*0.25)+(Pct.Breakfast.Participation*0.5)+(cacfp_supper01*0.1)+(snack_anyafter*0.15))) %>%
arrange(-district_sum) %>%
mutate(Rank = row_number()) %>%
select(CEName, Rank, County, ESC.Region, tea.all.stud, eco.dis.pct, district_sum, Pct.Lunch.Participation,
Pct.Breakfast.Participation, cacfp_supper01, snack_anyafter, CEP) %>%
mutate(cacfp_supper01 = ifelse(cacfp_supper01==100, "Yes", "No"),
snack_anyafter = ifelse(snack_anyafter==100, "Yes", "No"),
CEP = ifelse(CEP>0, "Yes", "No")) %>%
reshape::rename(c(CEName = "District Name",
ESC.Region = "ESC Region",
tea.all.stud = "Total Enrollment",
eco.dis.pct = "% Economically Disadvantaged",
district_sum = "Overall Score",
Pct.Lunch.Participation = "% Lunch Participation",
Pct.Breakfast.Participation = "% Breakfast Participation",
cacfp_supper01 = "CACFP Supper",
snack_anyafter = "Afterschool Snack"))
write_csv(district_rankings, here("foodrankings_2021-2022.csv"))
View(district_rankings)
